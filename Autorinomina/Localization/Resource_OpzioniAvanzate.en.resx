<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="OpzioniFiltro" xml:space="preserve">
    <value>Filter options</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_Modalita" xml:space="preserve">
    <value>Execution mode</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_Modalita_Auto" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_Modalita_CanChoose" xml:space="preserve">
    <value>Allow filter choice</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_Error" xml:space="preserve">
    <value>Behavior in case of error</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_Error_ManualFix" xml:space="preserve">
    <value>Ask to manually correct the filename</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_Error_NoRename" xml:space="preserve">
    <value>Do not rename</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_RemoveBracketEpisode" xml:space="preserve">
    <value>Delete brackets '() []' from the episode title</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_RemoveBracketSeriesTitle" xml:space="preserve">
    <value>Delete brackets '() []' from the title of the TV series</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_DescRegex" xml:space="preserve">
    <value>Regex to recognize the numbering</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_PatternAdd" xml:space="preserve">
    <value>Add pattern</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_PatternDelete" xml:space="preserve">
    <value>Delete pattern</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_PatternTest" xml:space="preserve">
    <value>Test pattern</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_PatternClipboard" xml:space="preserve">
    <value>Copy pattern</value>
  </data>
  <data name="Desc_OtherOptions" xml:space="preserve">
    <value>Miscellaneous options</value>
  </data>
  <data name="SerieTv_ConvertRomanNumbers" xml:space="preserve">
    <value>Convert roman to arabic numbers</value>
  </data>
  <data name="SerieTv_ConvertRomanNumbers_Tooltip" xml:space="preserve">
    <value>Example (Part II) becomes (Part 2)</value>
  </data>
  <data name="RemoveBracket" xml:space="preserve">
    <value>Delete brackets '() []' from the filename</value>
  </data>
  <data name="Audio_NoTagNumber" xml:space="preserve">
    <value>Behavior for missing numbering 'Tag-track number'</value>
  </data>
  <data name="Audio_NoTagNumber_UseFilter" xml:space="preserve">
    <value>Try to obtain it from the filename</value>
  </data>
  <data name="Audio_NoTagNumber_UseSequentialNumber" xml:space="preserve">
    <value>Use the sequential numbering</value>
  </data>
  <data name="Audio_NoTagNumber_ExcludeNumeration" xml:space="preserve">
    <value>Do not include the numbering</value>
  </data>
  <data name="Audio_NoTagNumber_NoRename" xml:space="preserve">
    <value>Do not rename the file</value>
  </data>
  <data name="Audio_TagNumber_ExcludeOtherChars" xml:space="preserve">
    <value>Exclude any non-numeric characters in the 'Tag-track number'</value>
  </data>
  <data name="Desc_ReverseSearchNumber" xml:space="preserve">
    <value>Use reverse lookup to find the numbering</value>
  </data>
  <data name="Desc_NoNumberCase" xml:space="preserve">
    <value>Behavior for missing numbering</value>
  </data>
  <data name="TabName_TheTvdb" xml:space="preserve">
    <value>The TVDB</value>
  </data>
  <data name="TVDB_Language_Desc" xml:space="preserve">
    <value>Languages used in research</value>
  </data>
  <data name="TVDB_Language_Main" xml:space="preserve">
    <value>Main language</value>
  </data>
  <data name="TVDB_Language_Secondary" xml:space="preserve">
    <value>Secondary language</value>
  </data>
  <data name="TVDB_ResearchOptions_Desc" xml:space="preserve">
    <value>Search options</value>
  </data>
  <data name="TVDB_SearchMethod" xml:space="preserve">
    <value>Search Mode</value>
  </data>
  <data name="TVDB_SearchMethod_CanChoose" xml:space="preserve">
    <value>Let me choose</value>
  </data>
  <data name="TVDB_SearchMethod_Auto" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="TVDB_SearchMethod_Info" xml:space="preserve">
    <value>The automatic search mode in some cases might not give positive results.</value>
  </data>
  <data name="TVDB_SearchNoResults" xml:space="preserve">
    <value>Behavior in case of no result</value>
  </data>
  <data name="TVDB_SearchNoResults_UseFilter" xml:space="preserve">
    <value>Use the filter</value>
  </data>
  <data name="TVDB_ManageCache" xml:space="preserve">
    <value>Cache management</value>
  </data>
  <data name="TVDB_ManageCache_Auto" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="TVDB_ManageCache_ManualLimit" xml:space="preserve">
    <value>Determine the limit manually</value>
  </data>
  <data name="TVDB_ManageCache_ClearCache" xml:space="preserve">
    <value>Clear cache</value>
  </data>
  <data name="TVDB_ManageCache_Limit_Desc" xml:space="preserve">
    <value>Limit is set to</value>
  </data>
  <data name="TVDB_ManageCache_SpaceOccuped_Desc" xml:space="preserve">
    <value>Occupied space</value>
  </data>
  <data name="Msg_TVDB_ClearCache" xml:space="preserve">
    <value>Empty the cache?</value>
  </data>
  <data name="Msg_InsertPattern" xml:space="preserve">
    <value>Enter regex pattern</value>
  </data>
  <data name="Msg_InsertPatternNote" xml:space="preserve">
    <value>Enter any notes</value>
  </data>
  <data name="Msg_DeletePatternRegex" xml:space="preserve">
    <value>Remove pattern '{0}' ?</value>
  </data>
  <data name="Msg_PatternTest" xml:space="preserve">
    <value>Enter a filename (without extension)</value>
  </data>
  <data name="TVDB_DescInfo" xml:space="preserve">
    <value>The services of The TVDB require a working internet connection</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_RecognizeLinkedEpisode" xml:space="preserve">
    <value>Recognize numbering episodes linked</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_RecognizeLinkedEpisode_Tooltip" xml:space="preserve">
    <value>Example "1x01-02" if it is not necessary it is recommended to disable</value>
  </data>
  <data name="WeakFilter" xml:space="preserve">
    <value>Use a less aggressive filtering</value>
  </data>
  <data name="WeakFilter_Tooltip" xml:space="preserve">
    <value>It keeps text similar to the original text</value>
  </data>
  <data name="SerieTv_OpzioniFiltro_Modalita_OnlyOnError" xml:space="preserve">
    <value>Allow filter choice only on error</value>
  </data>
  <data name="Audio_ID3Missing" xml:space="preserve">
    <value>Do not rename when there is no ID3 Tag</value>
  </data>
</root>